package MastermindB;
import java.util.*;

public class NoRepeatingColour {                                                  // This class is for the gameplay without repeating colours //

	static String[] answerArray;                                                // The array "answerArray" is used to store the random colours generated by the computer//
	static String ColourRightPos= "";                                          // The variable "ColourRightPos" is for colours in right position//
	static String ColourWrongPos="";                                           // The variable "ColourWrongPos" is for colours in wrong position//
	static int ComputerScore = 0;                                             // The variable "ComputerScore" is the score achieved by the computer when the player loses //
	static String [] guessArray;                                               // The  array "guessArray" is used to store the guesses made by the player//
	static int Guess= 12;                                                     // The variable "Guess" is to count the number of times the player has guessed//
		
	
	
       public void NRC() {                                                       // This method is used for the gameplay  with No Repeating Colours //
	 
	   @SuppressWarnings("resource")
	   Scanner scan = new Scanner (System.in);
	   System.out.println("Select 4 colour out of 6");                                     // Message tells the player to select 4 colours // 
	 
		Object Color1,Color2,Color3,Color4;
		
		String[] Colours = { "R", "B", "O", "G", "Y", "P" };                               // The colours stored in the array //
	   
		
		
		NoRepeatingColour.shuffle(Colours);                                               // The shuffle method for generating random colours without repetition //
		
		
		
		for (int i = 0; i<Colours.length; i++ ) {                            // The for loop iterates and stores the randomly generated colours in the array //
			answerArray = new String[4];
			
			answerArray[0] = Colours[i];
	   		answerArray[1] = Colours[(i+1)%4];         
	   		answerArray[2] = Colours[(i+2)%4];
	   		answerArray[3] = Colours[(i+3)%4];
	   		
		}
			
	
			
			
	   		System.out.println("First Colour: ");
			
			Color1 = scan.next();
			
			System.out.println("Second Colour: ");
			                                                          // It takes player's input of colours // 
	        Color2 = scan.next();
	                                                                              
	        System.out.println("Third Colour: ");
	        
	        Color3 = scan.next();
	        
	        System.out.println("Fourth Colour: ");
	        
	        Color4 = scan.next();
	        
	        
	       

			
	        
	       while ( Guess!=0  )
	        {
	    	   guessArray = new String[4];
	    	   
	    	    guessArray[0] = (String) Color1;                                            // Array to store player input //
		   		guessArray[1] = (String) Color2;
		   		guessArray[2] = (String) Color3;
		   		guessArray[3] = (String) Color4;
	    	   
	    	  
	   		
				
	   		
	         for (int i1 = 0; i1 < answerArray.length; i1++) {
					if (guessArray[i1].equalsIgnoreCase(answerArray[i1]))                       /*for loop to iterate through the answerArray and if it matches with the guessArray in right positions
                                                                                                  *it adds a "+" to ColourRightPos */
						{ColourRightPos += "+";} 
					
	         }
	         
	         
	         
	            for (int i1 = 0; i1 < answerArray.length; i1++){
            	 
			if (guessArray[i1].equalsIgnoreCase(answerArray[(i1+1)%4]) )
								ColourWrongPos+= "-";
					                                                                         /*for loop to iterate through the answerArray and if it matches with the guessArray in wrong positions
                                                                                                   *it adds a "-" to ColourWrongPos */
			             
			else if (guessArray[i1].equalsIgnoreCase(answerArray[(i1+2)%4]))
								ColourWrongPos+= "-";
			             
			            
			else if (guessArray[i1].equalsIgnoreCase(answerArray[(i1+3)%4]))
								ColourWrongPos+= "-";
						}

	            
	            
	            
       if (guessArray[0].equalsIgnoreCase(guessArray[1]) & guessArray[1].equalsIgnoreCase(guessArray[2]) & guessArray[2].equalsIgnoreCase(guessArray[3]))
		         { ColourWrongPos = "";}
	        
	         
	    Guess--; 
	         
	         if (ColourRightPos.equals("++++") )
	      {                                                      // Player win conditon // 
	  Main.win();	
	      break;
	     }
	         
	     
    else {
    	
    System.out.println("");   
    	
     System.out.println( ColourRightPos +ColourWrongPos);
   	 
   	 System.out.println("");
   	 
     System.out.println("Choose 4 colors again" );
     
	 System.out.println("");
	 
     System.out.println("Guesses: "+Guess);
     
     System.out.println("");
	        
	        
	        ColourRightPos = "";
	                                                      
	        ColourWrongPos = "";
	        
            System.out.println("First Colour: ");
			
			Color1 = scan.next();
			
			System.out.println("Second Colour: ");
			                                                          // It takes player's input of colours // 
	        Color2 = scan.next();
	                                                                              
	        System.out.println("Third Colour: ");
	        
	        Color3 = scan.next();
	        
	        System.out.println("Fourth Colour: ");
	        
	        Color4 = scan.next();
	        
	        
	        guessArray[0] = (String) Color1;
	   		guessArray[1] = (String) Color2;
	   		guessArray[2] = (String) Color3;
	   		guessArray[3] = (String) Color4;
	   		
	         }
	         
	        
	        
	        
			
	        }
	
		
            if (Guess==0)                         //  Lose method will be output if the player runs out of guesses //
            {lose2();} 
            }
 
	          


       public static void shuffle(String[] colours) {
	
	    int elements = colours.length;{
	                                                                                         // This method is used by the NRC() method for generating random colours without repetition//
	    for( int i = 0; i< elements; i++) {                                                  
	   	int c = i + (int)(Math.random()*(elements-i));
		
		String temp = colours[c];
		colours[c]= colours[i];
		colours[i]= temp;
		
	   }
	    
     }
	    
   }
       
       /* This method is used by the NRC() method 
   	 *  when the player loses the game by running out of guesses 
   	 *  and as a result it will show the message that the player 
   	 *  has lost the game. The Computer's colours will be revealed .
   	 *  Then it will output the ComputerScore as the Computer has won the game   */
       
       public static void lose2() {
   		
  	     {  
  	     System.out.println("Sorry, You ran out of guesses");
  	     System.out.println("");
  	     System.out.println("Computer's Colours: "+answerArray[0]+" "+answerArray[1]+" "+answerArray[2]+" "+answerArray[3]);
  	     ComputerScore+=1;
  	     System.out.println( "ComputerScore:" + ComputerScore);
  		 }
  		 
  		}
       
       
       
 }
