package MastermindB;

	import java.util.*;


	class RandomInput {                                                    // This method is used for random generation of colours which includes repetition of colours , 
	    public static String IntArray (String[] array) {                   //it returns the array to be used in another method//
	    	Random generator = new Random();
	    	int inputRandomNum = generator.nextInt(array.length);
	    	return array[inputRandomNum];
	    }
	}

	
	
public class RepeatingColours {                              // This class is for the gameplay with repeating colours //
	
	static String ColourRightPos= "";                             // The variable "ColourRightPos" is for colours in right position//
	
	static String ColourWrongPos= "";                             // The variable "ColourWrongPos" is for colours in wrong position//
	static String [] answerArr;                                // The array "answerArr" is used to store the random colours generated by the computer//
	static String [] guessArray;                                // The array "guessArray" is used to store the guesses made by the player//
	static int Guess= 12;                                       // The variable "Guess" is to count the number of times the player has guessed//

	static int ComputerScore = 0;                               // The variable "ComputerScore" is the score achieved by the computer when the player loses //
	
	public void RC() {                                        // This is the method for gameplay with the repeating colours // 
		
		
		
		
		@SuppressWarnings("resource")
		Scanner scan = new Scanner (System.in);                    // Player input // 
		
		System.out.println("Select 4 colour out of 6");             // Message asking the player to input colours //
		System.out.println("");
		
		Object RandomColor1, RandomColor2, RandomColor3, RandomColor4;      // This object contains the randomly generated colours //
		Object Color1,Color2,Color3,Color4;                                 // This object takes the input from the player // 
		
		String [] Colours = { "R", "B", "O", "G", "Y", "P" };             // This array contains the colours that will be randomly generated by the computer//
		
		
		
		
		RandomColor1= RandomInput.IntArray(Colours);                //  This uses the random generator method to generate colours randomly//
		RandomColor2= RandomInput.IntArray(Colours);                        
		RandomColor3= RandomInput.IntArray(Colours);
		RandomColor4= RandomInput.IntArray(Colours); 
		
		answerArr = new String[4];                               // It creates a new array "answerArray" with a length of 4 to store the randomly generated colours // 
		
		answerArr[0] = (String) RandomColor1;
   		answerArr[1] = (String) RandomColor2;                   // The array "answerArray" stores the randomly generated colours //
   		answerArr[2] = (String) RandomColor3;
   		answerArr[3] = (String) RandomColor4;
		
		
   		
   		
   		
		
		
		
		System.out.println("First Colour: ");
		
		Color1 = scan.next();
		
		System.out.println("Second Colour: ");                                // It takes player's input of colours // 
		
        Color2 = scan.next();
        
        System.out.println("Third Colour: ");
        
        Color3 = scan.next();
        
        System.out.println("Fourth Colour: ");
        
        Color4 = scan.next();
        
       
        
 
        
		
        
       while ( Guess!=0  )                                       //  While loop to continuing the gameplay until the guess is 0 //
        {
    	   
    	   guessArray = new String[4];                               // It creates a new array "guessArray" with a length of 4 to store player's guesses // 
    	   
    	guessArray[0] = (String) Color1;
   		guessArray[1] = (String) Color2;
   		guessArray[2] = (String) Color3;                      // The array "guessArray" to store the player guesses //
   		guessArray[3] = (String) Color4;
   		
   		
   		
   		
   		
   		
   		
         for (int i = 0; i < answerArr.length; i++) {
				if (guessArray[i].equalsIgnoreCase(answerArr[i]))                /*for loop to iterate through the answerArray and if it matches with the guessArray in right positions
					                                                                  *it adds a "+" to ColourRightPos */
					{
					ColourRightPos+= "+";
					   }
         }
				
         
         
	    	for (int i1 = 0; i1 < answerArr.length; i1++){
	           	 
			if (guessArray[i1].equalsIgnoreCase(answerArr[(i1+1)%4]) )
								ColourWrongPos+= "-";
				                                                                     	/*for loop to iterate through the answerArray and if it matches with the guessArray in wrong positions
                                                                                                 *it adds a "-" to ColourWrongPos */
			                                                                                      
			else if (guessArray[i1].equalsIgnoreCase(answerArr[(i1+2)%4]))
								ColourWrongPos+= "-";
			             
			            
			else if (guessArray[i1].equalsIgnoreCase(answerArr[(i1+3)%4]))
								ColourWrongPos+= "-";
						}
 
	    	
	    	
	    	
       if (guessArray[0].equalsIgnoreCase(guessArray[1]) & guessArray[1].equalsIgnoreCase(guessArray[2]) & guessArray[2].equalsIgnoreCase(guessArray[3]))
		         { ColourWrongPos = "";}
         
         
                    
				
         
         
         Guess--;                                     // Guess decreases by 1 each time //
         
         if (ColourRightPos.equals("++++") )              // if-statement if the player correctly guesses all colours  and outputs the win() method //
         { Main.win();	                                                                                    
         break;
         }
         
         
         else {
        	 
        	 System.out.println("");
        	 
        	 System.out.println( ColourRightPos +ColourWrongPos);
        	 
        	 System.out.println("");
        	 
        	 System.out.println("Choose 4 colors again" );
        	 
        	 System.out.println("");
        	 
             System.out.println("Guesses: "+Guess);
             
             System.out.println("");
        	        
     	
        
        
        ColourRightPos = ""	;                        // It resets the ColourRightPos and ColourWrongPos //
        ColourWrongPos = "" ;
        
        
        
        
        System.out.println("First Colour: ");
		
		Color1 = scan.next();
		
		System.out.println("Second Colour: ");
		                                                          // It takes player's input of colours // 
        Color2 = scan.next();
                                                                              
        System.out.println("Third Colour: ");
        
        Color3 = scan.next();
        
        System.out.println("Fourth Colour: ");
        
        Color4 = scan.next();
        
        
        
        guessArray[0] = (String) Color1;
   		guessArray[1] = (String) Color2;
   		guessArray[2] = (String) Color3;
   		guessArray[3] = (String) Color4;
   		
         }
         
        
        
        }
		
       if (Guess==0)                  // if-statement  if the guess is 0 it will output the lose() method//
       {lose1();}
      
      
      
	}
	
	/* This method is used by the RC() method 
	 *  when the player loses the game by running out of guesses 
	 *  and as a result it will show the message that the player 
	 *  has lost the game. Then it will output the ComputerScore
	 *  as the Computer has won the game   */
	
	
	public static void lose1() {
		
	     {
	     System.out.println("Sorry, You ran out of guesses");
	     System.out.println("");
	     System.out.println("Computer's Colours: "+answerArr[0]+" "+answerArr[1]+" "+answerArr[2]+" "+answerArr[3] );
	     ComputerScore+=1;
	     System.out.println( "ComputerScore:" + ComputerScore);
		 }
		 
		}
	
	
}

   
      

      
 





















































